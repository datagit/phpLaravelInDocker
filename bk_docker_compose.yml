# https://github.com/dieepak/php7.2-apache-mysql-mongo-redis/blob/master/docker-compose.yml
# -> from Dockerfile: https://docs.docker.com/compose/compose-file/compose-file-v3/
# -> make image froim file Dockerfile
# docker build -t myphp/7.4-xmr-apache --build-arg USER_ID=$(id -u) .
# -> run image to container
# docker run -it --name mywebserver -p 8888:80 -h firstserver myphp/7.4-xmr-apache
# -> run bash on container name
# docker exec -it mywebserver bash
# -> start services from file docker-compose
# docker-compose down && docker-compose up -d

version: "3"
services:
  redis:
    image: redis:alpine
    restart: "always"
    container_name: redis
    ports:
      - "6389:6379"
    networks:
      - app-network
  mongodb:
    image: mongo
    restart: "always"
    container_name: mongodb
    volumes:
      - .:/var/www/html
    ports:
      - '27037:27017'
    networks:
      - app-network
  backend:
    container_name: backend
    # image name was push on docker hub
    # image: getjv/php-apache
    build: .
    image: myphp/7.4-xmr-apache
    restart: always
    ports:
      - "8088:80"
    volumes:
      - .:/var/www/html
    # environment:
    #   - DOCUMENT_ROOT_CONTEXT=public
    #   - ALLOW_OVERRIDE_OPTION=All
    #   - APPLICATION_ENV_OPTION=development
    networks:
      - app-network
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3308:3306" #-> at pc-host -> localhost:3308
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: 123456
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
